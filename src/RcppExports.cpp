// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ordmeta_mono
List ordmeta_mono(NumericVector p);
RcppExport SEXP _metapro_ordmeta_mono(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(ordmeta_mono(p));
    return rcpp_result_gen;
END_RCPP
}
// ordmeta_signed
List ordmeta_signed(NumericVector p, NumericVector effect_size, bool sort_by_decreasing);
RcppExport SEXP _metapro_ordmeta_signed(SEXP pSEXP, SEXP effect_sizeSEXP, SEXP sort_by_decreasingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type effect_size(effect_sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type sort_by_decreasing(sort_by_decreasingSEXP);
    rcpp_result_gen = Rcpp::wrap(ordmeta_signed(p, effect_size, sort_by_decreasing));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_metapro_ordmeta_mono", (DL_FUNC) &_metapro_ordmeta_mono, 1},
    {"_metapro_ordmeta_signed", (DL_FUNC) &_metapro_ordmeta_signed, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_metapro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
